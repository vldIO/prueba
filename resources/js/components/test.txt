===========wellcomes========

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>Laravel</title>

        <!-- Fonts -->
        <link href="https://fonts.googleapis.com/css?family=Nunito:200,600" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/open-iconic/1.1.1/font/css/open-iconic-bootstrap.css" />

        
    </head>
    <body>
    <h1>Listado de Alumnos</h1>
        <div id="app">
            
            <example-component>
            </example-component>
        </div>
        <script src="{{ asset('js/app.js') }}">

        </script>
    </body>
</html>


=============example vue==============

<template>
  <div>
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-md-10">
          <div class="card">
            <div class="card-header">
              <b-button v-b-modal.modal-nuevo-alum>Nuevo <span class="oi oi-plus"></span></b-button>
            </div>
            <table class="table table-sm table-hover" style="text-align: center" id="alum">
              <thead class="thead-dark" style="width: 97%; overflow-y: auto; overflow-x: hidden">
                <tr>
                  <th scope="col" colspan="2" >Nombre Completo</th>
                  <th scope="col">Edad</th>
                  <th scope="col"></th>
                </tr>
              </thead>
              <tbody style="height: 230px; overflow-y: auto; overflow-x: hidden">
                <tr v-for="items in table" v-bind:key="items.id">
                  <td style="text-align: left">{{ items.apellidos }}</td>
                  <td style="text-align: left">{{ items.nombres }}</td>
                  <td>{{ items.edad }}</td>
                  <td>
                    <b-button pill variant="outline-info"
                    v-b-modal.modal-notas-alum
                    v-on:click="editar(items)" title="Ver Notas">
                      <span class="oi oi-spreadsheet"></span>
                    </b-button>
                    <b-button pill variant="outline-success"
                    v-b-modal.modal-editar-alum
                    v-on:click="editar(items)" title="Editar Alumno">
                      <span class="oi oi-pencil"></span> 
                    </b-button>
                    <b-button pill variant="outline-danger"
                    v-on:click="deleteAlumno(items)" title="Eliminar Alumno">
                      <span class="oi oi-trash"></span>  
                    </b-button>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>

    <!-- Modal Nuevo Alumno -->
    <b-modal
      id="modal-nuevo-alum"
      ref="modal"
      centered
      title="Nuevo Alumno"
      @ok="postAlumno"
    >
      <form ref="form" @submit.stop.prevent="postAlumno">
        <b-form-group label="Apellidos" label-for="" invalid-feedback="Last Name is required">
          <b-form-input id="last-input" v-model="alumno.apellidos" required>
          </b-form-input>
        </b-form-group>
        <b-form-group label="Nombres" label-for="" invalid-feedback="Name is required">
          <b-form-input id="name-input" v-model="alumno.nombres" required>
          </b-form-input>
        </b-form-group>
        <b-form-group label="Edad" label-for="" invalid-feedback="Edad is required">
          <b-form-input id="edad-input" v-model="alumno.edad" required>
          </b-form-input>
        </b-form-group>
      </form>
    </b-modal>
    <!-- Fin Modal -->

    <!-- Modal Editar Alumno -->
    <b-modal
      id="modal-editar-alum"
      ref="modal"
      centered
      title="Editar Alumno"
      @ok="putAlumno"
    >
      <form ref="form" @submit.stop.prevent="putAlumno">
        <b-form-group label="Apellidos" label-for="" invalid-feedback="Last Name is required">
          <b-form-input id="last-input" v-model="selectAlumno.apellidos" required>
          </b-form-input>
        </b-form-group>
        <b-form-group label="Nombres" label-for="" invalid-feedback="Name is required">
          <b-form-input id="name-input" v-model="selectAlumno.nombres" required>
          </b-form-input>
        </b-form-group>
        <b-form-group label="Edad" label-for="" invalid-feedback="Edad is required">
          <b-form-input id="edad-input" v-model="selectAlumno.edad" required>
          </b-form-input>
        </b-form-group>
      </form>
    </b-modal>
    <!-- Fin Modal -->

    <!-- Modal ver notas Alumno -->
    <b-modal
      id="modal-notas-alum"
      size="lg"
      ref="modal"
      centered
      title="Notas Alumno"
    >
      <form ref="form">
        <table class="table table-bordered table-hover" style="text-align: center" id="alum">
          <caption>Alumno: {{selectAlumno.apellidos}} {{selectAlumno.nombres}}</caption>
          <thead>
            <tr>
              <!-- <th  scope="col">Docente</th> -->
              <th scope="col">Docente</th>
              <th scope="col">Materia</th>
              <th scope="col">Nota</th>
              <th scope="col">Semestre</th>
              <th scope="col">Horario</th>
              <th scope="col">Aula</th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="mat in selectAlumno.registros" v-bind:key="mat.id">
              <td style="text-align: left">{{ mat.materia.docente.apellidos }} {{ mat.materia.docente.nombres }}</td>
              <!-- <td style="text-align: left">{{ mat.materia.docente.nombres }}</td> -->
              <td style="text-align: left">{{ mat.materia.nombre_materia }}</td>
              <td>{{ mat.nota }}</td>
              <td>{{ mat.materia.semestre }}</td>
              <td>{{ mat.materia.horario }}</td>
              <td>{{ mat.materia.aula }}</td>
            </tr>
          </tbody>
        </table>
      </form>
    </b-modal>
    <!-- Fin Modal -->

  </div>
</template>

<style src="../../../node_modules/bootstrap/dist/css/bootstrap.css">
</style>

<script>
  import Vue from 'vue'
  import BootstrapVue from 'bootstrap-vue'
  import 'bootstrap/dist/css/bootstrap.css'
  import 'bootstrap-vue/dist/bootstrap-vue.css'

  Vue.use(BootstrapVue)

  export default {
    data:()=>({
      bus: new Vue(),
      table:[],
      alumno:{},
      selectAlumno:{},
    }),
    mounted() {
      this.getTable();
      this.bus.$on("closeDialog", () => {
        this.getTable();
      });
            
      console.log('Component mounted.')
    },
    methods: {
      async getTable() {
        try {
            let res = await axios.get("api/alumno")
            console.log(res)
            this.table = res.data
        } catch (e) {
            console.log(e)
        }
      },
      async postAlumno() {
        let res = await axios.post("api/alumnoST",this.alumno)
        console.log(res)
        this.alumno = res.data
        this.table.slice(0);
      },
      editar(item){
        this.selectAlumno=item;
        console.log(this.selectAlumno)
      },
      async putAlumno() {
        let res = await axios.put("api/alumno/"+this.selectAlumno.id, this.selectAlumno)
        console.log(res)
        this.selectAlumno = res.data
              
      },
      async deleteAlumno(item) {
        this.selectAlumno=item;
        let res = await axios.delete("api/alumno/"+this.selectAlumno.id, this.selectAlumno)
        console.log(res)
        this.selectAlumno = res.data
        this.table.splice(this.table.indexOf(item),1);
      }
    }
  }
</script>


=====desplazamiento========

<table id="dtDynamicVerticalScrollExample" class="table table-striped table-bordered table-sm" cellspacing="0"
  width="100%">
  <thead>
    <tr>
      <th class="th-sm">Name
      </th>
      <th class="th-sm">Position
      </th>
      <th class="th-sm">Office
      </th>
      <th class="th-sm">Age
      </th>
      <th class="th-sm">Start date
      </th>
      <th class="th-sm">Salary
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Tiger Nixon</td>
      <td>System Architect</td>
      <td>Edinburgh</td>
      <td>61</td>
      <td>2011/04/25</td>
      <td>$320,800</td>
    </tr>
    <tr>
      <td>Garrett Winters</td>
      <td>Accountant</td>
      <td>Tokyo</td>
      <td>63</td>
      <td>2011/07/25</td>
      <td>$170,750</td>
    </tr>
    <tr>
      <td>Ashton Cox</td>
      <td>Junior Technical Author</td>
      <td>San Francisco</td>
      <td>66</td>
      <td>2009/01/12</td>
      <td>$86,000</td>
    </tr>
    <tr>
      <td>Cedric Kelly</td>
      <td>Senior Javascript Developer</td>
      <td>Edinburgh</td>
      <td>22</td>
      <td>2012/03/29</td>
      <td>$433,060</td>
    </tr>
    <tr>
      <td>Airi Satou</td>
      <td>Accountant</td>
      <td>Tokyo</td>
      <td>33</td>
      <td>2008/11/28</td>
      <td>$162,700</td>
    </tr>
    <tr>
      <td>Brielle Williamson</td>
      <td>Integration Specialist</td>
      <td>New York</td>
      <td>61</td>
      <td>2012/12/02</td>
      <td>$372,000</td>
    </tr>
    <tr>
      <td>Herrod Chandler</td>
      <td>Sales Assistant</td>
      <td>San Francisco</td>
      <td>59</td>
      <td>2012/08/06</td>
      <td>$137,500</td>
    </tr>
    <tr>
      <td>Rhona Davidson</td>
      <td>Integration Specialist</td>
      <td>Tokyo</td>
      <td>55</td>
      <td>2010/10/14</td>
      <td>$327,900</td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <th>Name
      </th>
      <th>Position
      </th>
      <th>Office
      </th>
      <th>Age
      </th>
      <th>Start date
      </th>
      <th>Salary
      </th>
    </tr>
  </tfoot>
</table>